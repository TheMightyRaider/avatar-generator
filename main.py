import random
import hashlib
from utils import flat_matrix, pixel_generation, generate_color, draw_identicon, generate_matrix, mirror_matrix

# Hash the input
# Generate a 6*6 matrix
# Find a algorithm to find position in the matrix that will generate a unique pattern. [possible variation [2^36]- "68719476736"]
#   Goal is to have the position in a continuous manner.
#       First method, comparing the adjacent position.
#       Second method, using average.
#       Third method, using median.
#       Fourth method, ODD-EVEN position
# Fill the position with colors.

# Generating avatar based on username

from utils import generate_identicon


def generate_unique_identicon(name):
    # hashlib takes the argument in byte, hence converting the string input to bytes
    byte_value = hashlib.md5(name.encode())

    # The generated byte input is converted to hexa format using hexdigest()
    hash_in_hexa = byte_value.hexdigest()

    return generate_identicon(hash_in_hexa)


# Generating random identicon


def generate_random_identicon():

    randomint = str(random.randint(0, pow(10, 40)))
    # hashlib takes the argument in byte, hence converting the string input to bytes
    byte_value = hashlib.md5(randomint.encode())

    # The generated byte input is converted to hexa format using hexdigest()
    random_hash = byte_value.hexdigest()

    return generate_identicon(random_hash)


# user_input = input('Enter the name :')
generate_unique_identicon('Testing')
generate_random_identicon()
